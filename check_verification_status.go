package tggateway

import (
	"context"
	"fmt"
)

type CheckVerificationStatusParams struct {
	// The unique identifier of the verification request whose status you want to check.
	RequestID string `json:"request_id"`
	// The code entered by the user.
	// If provided, the method checks if the code is valid for the relevant request.
	Code string `json:"code,omitempty"`
}

// Use this method to check the status of a previously sent verification message. If the code was generated by
// Telegram, you can also use this method to verify the correctness of the code entered by the user. Even if you
// set the code yourself, it's recommended to call this method after the user successfully enters the code,
// passing the correct code in the `code` parameter, so we can track the conversion rate of your verifications.
func (c Client) CheckVerificationStatus(
	ctx context.Context,
	params *CheckVerificationStatusParams,
) (*RequestStatus, error) {
	var resp struct {
		Ok     bool           `json:"ok"`
		Error  *string        `json:"error"`
		Result *RequestStatus `json:"result"`
	}

	err := c.makeAPIRequest(ctx, "checkVerificationStatus", params, &resp)
	if err != nil {
		return nil, err
	}

	if resp.Error != nil {
		return nil, fmt.Errorf("send verification message failed: %w", c.mapErr(*resp.Error))
	}

	return resp.Result, nil
}
