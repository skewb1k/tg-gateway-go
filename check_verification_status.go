package tggateway

import (
	"context"
	"encoding/json"
	"fmt"
)

type CheckVerificationStatusParams struct {
	// The unique identifier of the verification request whose status you want to check.
	RequestID string `json:"request_id"`
	// The code entered by the user.
	// If provided, the method checks if the code is valid for the relevant request.
	Code string `json:"code,omitempty"`
}

// Use this method to check the status of a previously sent verification message. If the code was generated by
// Telegram, you can also use this method to verify the correctness of the code entered by the user. Even if you
// set the code yourself, it's recommended to call this method after the user successfully enters the code,
// passing the correct code in the `code` parameter, so we can track the conversion rate of your verifications.
func (c Client) CheckVerificationStatus(
	ctx context.Context,
	params *CheckVerificationStatusParams,
) (RequestStatus, error) {
	if params == nil {
		panic("param must be not nil")
	}

	var result RequestStatus
	resultBytes, err := c.makeAPIRequest(ctx, "checkVerificationStatus", params, &result)
	if err != nil {
		return RequestStatus{}, err
	}

	if err := json.Unmarshal(resultBytes, &result); err != nil {
		return RequestStatus{}, fmt.Errorf("failed to unmarshal result: %w", err)
	}

	return result, nil
}
